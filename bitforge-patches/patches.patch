diff --git a/patches/add-remote-url.patch b/patches/add-remote-url.patch
index 9bf5306..acf2c4d 100644
--- a/patches/add-remote-url.patch
+++ b/patches/add-remote-url.patch
@@ -5,7 +5,7 @@ index c1d64c0..3e60e80 100644
 @@ -321,3 +321,3 @@ function packageTask(type, platform, arch, sourceFolderName, destinationFolderNa
  		const productJsonStream = gulp.src(['product.json'], { base: '.' })
 -			.pipe(json({ commit, date: readISODate('out-build'), version }))
-+			.pipe(json({ commit, date: readISODate('out-build'), version, serverDownloadUrlTemplate: 'https://github.com/!!ASSETS_REPOSITORY!!/releases/download/!!RELEASE_VERSION!!/!!APP_NAME_LC!!-reh-${os}-${arch}-!!RELEASE_VERSION!!.tar.gz' }))
++			.pipe(json({ commit, date: readISODate('out-build'), version, serverDownloadUrlTemplate: `https://github.com/!!ASSETS_REPOSITORY!!/releases/download/!!RELEASE_VERSION!!/!!APP_NAME_LC!!-reh-web-${platform}-${arch}-!!RELEASE_VERSION!!.tar.gz` }))
  			.pipe(es.through(function (file) {
 diff --git a/build/gulpfile.vscode.js b/build/gulpfile.vscode.js
 index 7046ee0..9aa7bb0 100644
@@ -14,5 +14,5 @@ index 7046ee0..9aa7bb0 100644
 @@ -288,3 +288,3 @@ function packageTask(platform, arch, sourceFolderName, destinationFolderName, op
  		const productJsonStream = gulp.src(['product.json'], { base: '.' })
 -			.pipe(json({ commit, date: readISODate('out-build'), checksums, version }))
-+			.pipe(json({ commit, date: readISODate('out-build'), checksums, version, serverDownloadUrlTemplate: 'https://github.com/!!ASSETS_REPOSITORY!!/releases/download/!!RELEASE_VERSION!!/!!APP_NAME_LC!!-reh-${os}-${arch}-!!RELEASE_VERSION!!.tar.gz' }))
++			.pipe(json({ commit, date: readISODate('out-build'), checksums, version, serverDownloadUrlTemplate: `https://github.com/!!ASSETS_REPOSITORY!!/releases/download/!!RELEASE_VERSION!!/!!APP_NAME_LC!!-reh-web-${platform}-${arch}-!!RELEASE_VERSION!!.tar.gz` }))
  			.pipe(es.through(function (file) {
diff --git a/patches/brand.patch b/patches/brand.patch
index 71c3593..5c8d03e 100644
--- a/patches/brand.patch
+++ b/patches/brand.patch
@@ -797,8 +797,8 @@ index d2ae6b2..946e182 100644
  						Severity.Info,
 -						vsixs.length > 1 ? localize('InstallVSIXs.successReload', "Completed installing extensions. Please reload Visual Studio Code to enable them.")
 -							: localize('InstallVSIXAction.successReload', "Completed installing extension. Please reload Visual Studio Code to enable it."),
-+						vsixs.length > 1 ? localize('InstallVSIXs.successReload', "Completed installing extensions. Please reload VSCodium to enable them.")
-+							: localize('InstallVSIXAction.successReload', "Completed installing extension. Please reload VSCodium to enable it."),
++						vsixs.length > 1 ? localize('InstallVSIXs.successReload', "Completed installing extensions. Please reload BitForge to enable them.")
++							: localize('InstallVSIXAction.successReload', "Completed installing extension. Please reload BitForge to enable it."),
  						[{
 diff --git a/src/vs/workbench/contrib/extensions/browser/extensionsActions.ts b/src/vs/workbench/contrib/extensions/browser/extensionsActions.ts
 index 1fc3f63..c1f8609 100644
diff --git a/patches/cli.patch b/patches/cli.patch
index a364992..a65cdf8 100644
--- a/patches/cli.patch
+++ b/patches/cli.patch
@@ -11,12 +11,14 @@ index 2ddefe1..ab9c658 100644
  			.join("bin")
 -			.join(args.release.quality.server_entrypoint());
 +			.join(args.release.quality.server_entrypoint().unwrap());
- 
-diff --git a/cli/src/constants.rs b/cli/src/constants.rs
-index 1e277a8..97f17d3 100644
+
+ diff --git a/cli/src/constants.rs b/cli/src/constants.rs
+index 1e277a8..99e4fb2 100644
 --- a/cli/src/constants.rs
 +++ b/cli/src/constants.rs
-@@ -35,3 +35,6 @@ pub const DOCUMENTATION_URL: Option<&'static str> = option_env!("VSCODE_CLI_DOCU
+@@ -33,7 +33,10 @@ pub const VSCODE_CLI_AI_ENDPOINT: Option<&'static str> = option_env!("VSCODE_CLI
+ pub const VSCODE_CLI_QUALITY: Option<&'static str> = option_env!("VSCODE_CLI_QUALITY");
+ pub const DOCUMENTATION_URL: Option<&'static str> = option_env!("VSCODE_CLI_DOCUMENTATION_URL");
  pub const VSCODE_CLI_COMMIT: Option<&'static str> = option_env!("VSCODE_CLI_COMMIT");
 -pub const VSCODE_CLI_UPDATE_ENDPOINT: Option<&'static str> = option_env!("VSCODE_CLI_UPDATE_URL");
 +pub const VSCODE_CLI_UPDATE_ENDPOINT: Option<&'static str> = option_env!("VSCODE_CLI_UPDATE_ENDPOINT");
@@ -24,6 +26,17 @@ index 1e277a8..97f17d3 100644
 +pub const VSCODE_CLI_APP_NAME: Option<&'static str> = option_env!("VSCODE_CLI_APP_NAME");
 +pub const VSCODE_CLI_BINARY_NAME: Option<&'static str> = option_env!("VSCODE_CLI_BINARY_NAME");
  
+ /// Windows lock name for the running tunnel service. Used by the setup script
+ /// to detect a tunnel process. See #179265.
+@@ -87,7 +90,7 @@ const NONINTERACTIVE_VAR: &str = "VSCODE_CLI_NONINTERACTIVE";
+ /// Default data CLI data directory.
+ pub const DEFAULT_DATA_PARENT_DIR: &str = match option_env!("VSCODE_CLI_DATA_FOLDER_NAME") {
+ 	Some(n) => n,
+-	None => ".vscode-oss",
++	None => ".bitforge",
+ };
+ 
+ pub fn get_default_user_agent() -> String {
 diff --git a/cli/src/options.rs b/cli/src/options.rs
 index 7d152c0..c0f2fb2 100644
 --- a/cli/src/options.rs
